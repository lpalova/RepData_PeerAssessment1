ymd_hms(dt1)
hms("03:22:14" )
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, hours = 13, minutes = 34)
this_moment <- update(this_moment, hours = 13, minutes = 34)
this_moment
?now
nyc<-now(tz ="America/New_York" )
nyc
depart <- nyc + days(2)
depar
depart
depart <- update(depart, hours = 17, minutes = 34)
edpart
dedpart
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tz = "Asia/Hong_Kong)
")"
)
q
)
""
arrive <- with_tz(arrive, tz = "Asia/Hong_Kong")
arrive
?mdy
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
swirl
library(swirl)
swirl()
library(swirl)
swirl()
lm(Fertility ~ ., swiss)
all <- lm(Fertility ~ ., swiss)
summary(all)
lm(Fertility ~  Agriculture , swiss)
summary(lm(Fertility ~  Agriculture , swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec<- swiss$Examination + swiss$Catholic
efit<- lm(Fertility ~ . + ec , swiss)
efit$coefficients - all$coefficients
all$coefficients - efit$coefficients
library(swirl)
swirl()
6
dim(InsectSprays)
head(InsectSprays)
head(InsectSprays,15)
sD
summary(InsectSprays[,2])
sapply(InsectSprays, class)
fit <- lm(count ~ spray, InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray -1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm ( count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
1
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(Numeric ~ Year, hunger[hunger$Sex == "Female"])
lmF <- lm(hunger$Numeric[hunger$Sex == "Female"] ~ hunger$Year[hunger$Sex == "Female"])
lmM <- lm(hunger$Numeric[hunger$Sex == "Male"] ~ hunger$Year[hunger$Sex == "Male"])
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm( Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
library(swirl)
swirl()
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which = 1)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sqrt(deviance(fit)/fit$df)
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fitno)[1]/fitno$df)
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy^2) / (2*sigma^2)
plot(fit, which=5)
library(swirl)
swirl()
q
exit()
quit()
library(swirl)
swirl()
library(swirl)
swirl()
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality )
mdl <- lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality, swiss)
vif(mdl)
mdl2 <- lm ( Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fi1 <- lm(Fertility ~ Agriculture)
fi1 <- lm(Fertility ~ Agriculture, swiss)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d<- deviance(fit3)/4
d<- deviance(fit3)/43
n <- ( deviance(fit1) - deviance(fit3) )/2
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
mdl <- glm(ravenWinNum ~ ravenScore, family = "binomial", ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp( confint(mdl) )
anova(mdl)
qchiqs(0.95,1)
qchisq(0.95, 1)
var(rpois(1000, 50))
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
exp( confint(mdl, 'date') )
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
?glm
mdl2 <- glm(simplystats ~ date, poisson, hits, offset = log(visits+1))
qpois(.95, mdl2$fitted.values[704])
quit()
setwd("~/coursera/assignments/7_Reproducible_Research_5/projekt1/RepData_PeerAssessment1")
library(dplyr)
activityDF <- read.csv("./activity.csv", colClasses=c("integer","Date","integer"))
activity <- tbl_df(activityDF)
total_steps <- sum( activity$steps, na.rm = TRUE )
days <- unique( activity$date )
total_steps_per_day <- total_steps / length( days )
str(total_steps)
by_date <- group_by( activity, date )
total_steps_each_day <- summarize( by_date, sum( steps, na.rm = TRUE ) )[[2]]
hist(total_steps_each_day,
main = "Histogram of the total number of steps taken each day",
xlab = "Total number of steps taken each day")
str(total_steps_each_day)
head(activity)
View(ac)
View(activity)
288*2
by_interval <- group_by( activity, interval )
by_interval
average_steps_each_interval <- summarize( by_interval, mean( steps, na.rm = TRUE ) )[[2]]
plot(average_steps_each_interval,
main = "Time series plot of the 5-minute interval and the average number of steps taken",
xlab = "5-minute interval",
ylab = "Average number of steps taken, averaged across all days"
type = "l")
plot(average_steps_each_interval,
main = "Time series plot of the 5-minute interval and the average number of steps taken",
xlab = "5-minute interval",
ylab = "Average number of steps taken, averaged across all days",
type = "l")
str(average_steps_each_interval)
head(activity)
?max
by_interval <- group_by( activity, interval )
average_steps_each_interval <- summarize( by_interval, mean( steps, na.rm = TRUE ) )[[2]]
plot(average_steps_each_interval,
main = "Time series plot of the average number of steps taken",
xlab = "5-minute interval",
ylab = "Average number of steps taken, averaged across all days",
type = "l")
max(average_steps_each_interval)
average_steps_each_interval
?max
which.max(average_steps_each_interval)
average_steps_each_interval[104]
summarize( by_interval, mean( steps, na.rm = TRUE ) )
by_interval <- group_by( activity, interval )
average_steps_each_interval <- summarize( by_interval, mean( steps, na.rm = TRUE ) )
plot(average_steps_each_interval[[2]],
main = "Time series plot of the average number of steps taken",
xlab = "5-minute interval",
ylab = "Average number of steps taken, averaged across all days",
type = "l")
average_steps_each_interval
?plot
by_interval <- group_by( activity, interval )
average_steps_each_interval <- summarize( by_interval, mean( steps, na.rm = TRUE ) )
plot(average_steps_each_interval[[1]], average_steps_each_interval[[2]],
main = "Time series plot of the average number of steps taken",
xlab = "5-minute interval",
ylab = "Average number of steps taken, averaged across all days",
type = "l")
tail(average_steps_each_interval)
which.max( average_steps_each_interval[[2]] )
average_steps_each_interval[ which.max( average_steps_each_interval[[2]] ), ]
average_steps_each_interval[ which.max( average_steps_each_interval[[2]] ), 1]
maxsteps_interval <- average_steps_each_interval[ which.max( average_steps_each_interval[[2]] ), 1]
str(maxsteps_interval)
str(average_steps_each_interval)
dim(average_steps_each_interval)
dim(average_steps_each_interval)[1]
names(average_steps_each_interval)
maxsteps_interval <- average_steps_each_interval[ which.max( average_steps_each_interval[[2]] ), 1]
maxsteps_interval
maxsteps_interval[[1]]
str(maxsteps_interval[[1]])
head(activity)
?is.na
is.na(activity)
is.na(activity$interval)
sum(is.na(activity$interval))
head(activity)
sum(is.na(activity$date))
average_steps_each_interval
View(average_steps_each_interval)
?mutate
?assign
activity
?copy
activity2 <- activity
head(activity)
head(activity2)
activity2[1,1
]
str(activity2[1,1])
activity2[1,1] <- 5
head(activity2)
head(activity)
rm(activity2)
activity2 <- activity
which( is.na( activity2$steps ) )
is.na( activity2$steps )
head(which( is.na( activity2$steps ) ))
activity2 <- activity[1:100]
activity2
activity2 <- activity[1:100, ]
activity2
View(activity2)
activity2 <- activity[1:300, ]
View(activity2)
is.na( activity2$steps )
activity2[ is.na( activity2$steps ),  ]
View(activity2[ is.na( activity2$steps ),  ])
average_steps_each_interval
activity2
activity2 <- activity[270:300, ]
activity2
activity2 <- activity[289:295, ]
activity2
activity2 <- activity[285:295, ]
activity2
mutate( activity2, replace = is.na(step) )
mutate( activity2, replace = is.na(steps) )
activity2
mutate( activity2, replace = is.na(steps) )
?mutate
?replace
activity2$steps
str(activity2$steps)
activity2 <- mutate( activity[285:295, ], stepsnum = steps)
activity2
replace( activity2$stepsnum, 1:11, rep(5,11))
activity2$stepsnum
activity2 <- mutate( activity[285:295, ], stepsnum = replace( steps, 1:11, rep(5,11) ) )
activity2
is.na(steps)
is.na(activity2$steps)
activity2 <- mutate( activity[285:295, ], stepsnum = replace( steps, is.na(steps), 5) ) )
activity2 <- mutate( activity[285:295, ], stepsnum = replace( steps, is.na(steps), 5) )
activity2
activity2 <- mutate( activity[285:295, ], stepsnum = replace( steps, is.na(steps), interval) )
activity2
activity2
average_steps_each_interval
?join
activity2
activity2$interval
average_steps_each_interval[1]
average_steps_each_interval[1] == activity2$interval
average_steps_each_interval
activity2
left_join( activity2, average_steps_each_interval)
left_join( activity2, average_steps_each_interval, by = interval)
left_join( activity2, average_steps_each_interval, by = "interval")
activity2
activity3 <- left_join( activity2, average_steps_each_interval, by = "interval")
str(activity3)
activity3
activity2 <- mutate( activity[285:295, ] )
activity2
activity3 <- left_join( activity2, average_steps_each_interval, by = "interval")
activity3
average_steps_each_interval
tail(average_steps_each_interval)
activity3
activity3[ is.na(activity3), ]
activity3[ is.na(activity3), ]$steps
activity3[ is.na(activity3), 1 ] <- activity3[ is.na(activity3), 4]
activity3
activity3 <- left_join( activity2, average_steps_each_interval, by = "interval")
activity3
activity2 <- mutate( activity[2285:2295, ] )
activity2
View(activity)
tail(activity)
sim(activity)
dim(activity)
activity2 <- mutate( activity[5500:5550, ] )
activity2
mutate( activity[5550:5600, ] )
mutate( activity[550:560, ] )
mutate( activity[c(555:560,850:890), ] )
mutate( activity[c(1:5,555:560), ] )
activity3 <- left_join( activity2, average_steps_each_interval, by = "interval")
activity3
activity2 <- mutate( activity[c(1:5,555:560), ] )
activity2
activity3 <- left_join( activity2, average_steps_each_interval, by = "interval")
activity3
activity3[ is.na(activity3), 1 ] <- activity3[ is.na(activity3), 4]
activity3
activity2 <- left_join( activity, average_steps_each_interval, by = "interval")
activity2
View(activity2)
activity
activity2
?ifelse
names(average_steps_each_interval)
names(average_steps_each_interval) <- c("interval", "meansteps")
names(average_steps_each_interval)
activity2 <- left_join( activity, average_steps_each_interval, by = "interval")
activity2
activity2 <- left_join( activity[c(1:5,550:600),], average_steps_each_interval, by = "interval")
activity2
activity2 <- left_join( activity[c(1:5,600:620),], average_steps_each_interval, by = "interval")
activity2
activity2 <- left_join( activity[c(1:5,580:600),], average_steps_each_interval, by = "interval")
activity2
activity2 <- left_join( activity[c(1:5,1000:1010),], average_steps_each_interval, by = "interval")
activity2
mutate( activity2, stepsnum = ifelse( is.na(steps), meansteps, steps) )
activity2 <- left_join( activity, average_steps_each_interval, by = "interval")
mutate( activity2, stepsnum = ifelse( is.na(steps), meansteps, steps) )
activity2 <- left_join( activity[c(1:5,1000:1010),], average_steps_each_interval, by = "interval")
activity2
mutate( activity2, stepsnum = ifelse( is.na(steps), meansteps, steps) )
mutate( activity2, steps = ifelse( is.na(steps), meansteps, steps) )
activity2
mutate( activity2, steps = ifelse( is.na(steps), meansteps, steps) )
activity2 <- mutate( activity2, steps = ifelse( is.na(steps), meansteps, steps) )
activity2
activity2 <- select( activity2, steps, date, interval )
activity2
activity
activity2 <- left_join( activity, average_steps_each_interval, by = "interval")
activity2 <- mutate( activity2, steps = ifelse( is.na(steps), meansteps, steps) )
activity2 <- select( activity2, steps, date, interval )
activity
activity2
activity2 <- left_join( activity, average_steps_each_interval, by = "interval")
activity2 <- mutate( activity2, steps = ifelse( is.na(steps), meansteps, steps) )
activity2 <- select( activity2, steps, date, interval )
by_date2 <- group_by( activity2, date )
total_steps_each_day2 <- summarize( by_date2, sum( steps, na.rm = TRUE ) )[[2]]
hist(total_steps_each_day2,
main = "Histogram of the total number of steps taken each day",
xlab = "Total number of steps taken each day")
mean_steps2 <- mean( total_steps_each_day2, na.rm = TRUE )
median_steps2 <- median( total_steps_each_day2, na.rm = TRUE )
is.na(total_steps_each_day2)
by_date2 <- group_by( activity2, date )
total_steps_each_day2 <- summarize( by_date2, sum( steps ) )[[2]]
hist(total_steps_each_day2,
main = "Histogram of the total number of steps taken each day",
xlab = "Total number of steps taken each day")
mean_steps2 <- mean( total_steps_each_day2 )
median_steps2 <- median( total_steps_each_day2 )
mean_steps2
median_steps2
round(mean_steps2,2)
mean_steps2 <- round( mean( total_steps_each_day2 ), 2)
median_steps2 <- round( median( total_steps_each_day2 ), 2)
mean_steps2
?plot
?left_join
mean_steps2
rm(activity3)
total_steps <- sum( activity$steps, na.rm = TRUE )
days <- unique( activity$date )
total_steps_per_day <- total_steps / length( days )
by_date <- group_by( activity, date )
total_steps_each_day <- summarize( by_date, sum( steps, na.rm = TRUE ) )[[2]]
hist(total_steps_each_day,
main = "Histogram of the total number of steps taken each day",
xlab = "Total number of steps taken each day")
mean_steps <- mean( total_steps_each_day, na.rm = TRUE )
median_steps <- median( total_steps_each_day, na.rm = TRUE )
by_interval <- group_by( activity, interval )
average_steps_each_interval <- summarize( by_interval, mean( steps, na.rm = TRUE ) )
names(average_steps_each_interval) <- c("interval", "meansteps")
maxsteps_interval <- average_steps_each_interval[ which.max( average_steps_each_interval$meansteps ), 1]
numberNA <- sum( is.na( activity$steps ) )
activity2 <- left_join( activity, average_steps_each_interval, by = "interval")
activity2 <- mutate( activity2, steps = ifelse( is.na(steps), meansteps, steps) )
activity2 <- select( activity2, steps, date, interval )
by_date2 <- group_by( activity2, date )
total_steps_each_day2 <- summarize( by_date2, sum( steps ) )[[2]]
hist(total_steps_each_day2,
main = "Histogram of the total number of steps taken each day",
xlab = "Total number of steps taken each day")
mean_steps2 <- round( mean( total_steps_each_day2 ), 2)
median_steps2 <- round( median( total_steps_each_day2 ), 2)
mean_steps
mean_steps2
median_steps
median_steps2
?weekdays
activity2
weekdays(2012-10-01)
weekdays("2012-10-01")
weekdays(Sys.Date())
activity2
activity2$date[154]
weekdays(activity2$date[154])
weekdays(activity2$date[154])
weekdays(activity2$date[154])== "Tu"
weekdays(activity2$date[154])== "Monday"
da <- weekdays(activity2$date[154])
ifelse( weekdays(da) == "Saturday" | weekdays(date) == "Sunday" , "weekend", "weekday")
ifelse( weekdays(da) == "Saturday" | weekdays(da) == "Sunday" , "weekend", "weekday")
da <- activity2$date[154]
ifelse( weekdays(da) == "Saturday" | weekdays(da) == "Sunday" , "weekend", "weekday")
activity2 <- mutate( activity2,
day = ifelse( weekdays(date) == "Saturday" | weekdays(date) == "Sunday" , "weekend", "weekday") )
activity2
weekdays(activity2$date[1])
activity2$date[1]
View(activity2)
View(activity2[1000:2000,])
View(activity2[2000:3000,])
str(activity2)
?as.factor
activity2 <- mutate( activity2,
day = as.factor( ifelse( weekdays(date) == "Saturday" | weekdays(date) == "Sunday" , "weekend", "weekday") ) )
activity2
str(activity2)
View(activity2[1000:2000,])
activity2
activity2
by_interval_day2 <- group_by( activity2, interval, day )
by_interval_day2
average_steps_each_interval <- summarize( by_interval_day2, mean( steps ) )
average_steps_each_interval <- summarize( by_interval, mean( steps, na.rm = TRUE ) )
names(average_steps_each_interval) <- c("interval", "meansteps")
average_steps_each_interval_day2 <- summarize( by_interval_day2, mean( steps ) )
average_steps_each_interval_day2
average_steps_each_interval
288*2
average_steps_each_interval_day2
str(average_steps_each_interval_day2)
names(average_steps_each_interval_day2) <- c("interval", "day", "meansteps2")
average_steps_each_interval_day2
library(lattice)
?xyplot
by_interval_day2 <- group_by( activity2, interval, day )
average_steps_each_interval_day2 <- summarize( by_interval_day2, mean( steps ) )
names(average_steps_each_interval_day2) <- c("interval", "day", "meansteps2")
xyplot( meansteps2 ~ interval | day, data = average_steps_each_interval_day2,
main = "Time series plot of the average number of steps taken",
xlab = "5-minute interval",
ylab = "Average number of steps taken, averaged across all days",
type = "l" )
?xyplot
dim(average_steps_each_interval_day2)
288*2
